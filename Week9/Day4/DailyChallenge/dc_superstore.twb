<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='People+ (Sample - Superstore)' inline='true' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vlad/developers_institute/practice/Week9/Day4/ExerciseXP/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Orders)]' value='[Orders].[Region]' />
          <map key='[Region]' value='[People].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Orders)]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ProfitOverSales' datatype='real' name='[Calculation_646266549643685888]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='SalesProfitSorter' datatype='real' name='[Calculation_646266549644771329]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Sales&apos; THEN SUM([Sales])&#13;&#10;WHEN &apos;Profit&apos; THEN SUM([Profit])&#13;&#10;WHEN &apos;ProfitOverSales&apos; THEN [Calculation_646266549643685888]&#13;&#10;END' />
      </column>
      <column caption='ReturnSorter' datatype='real' name='[Calculation_646266549647618050]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;OrderCount&apos; THEN COUNTD([Order ID (Returns)])&#13;&#10;WHEN &apos;ReturnRate&apos; THEN [Calculation_888053554623225856]&#13;&#10;END' />
      </column>
      <column caption='CategoryProfitSorter' datatype='real' name='[Calculation_646266549665419267]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &apos;Profit&apos; THEN SUM([Profit])&#13;&#10;WHEN &apos;Profit Per Item&apos; THEN [Calculation_888053554628960261]&#13;&#10;WHEN  &apos;Quantity Per Order&apos; THEN [Calculation_888053554629718022]&#13;&#10;END' />
      </column>
      <column caption='ReturnRate' datatype='real' name='[Calculation_888053554623225856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Order ID (Returns)]) / COUNTD([Order ID])' />
      </column>
      <column caption='CriticalReturnRate' datatype='string' name='[Calculation_888053554626064388]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_888053554623225856] &gt;= 0.03 THEN &apos;Critical&apos;&#13;&#10;ELSE &apos;Moderate&apos;&#13;&#10;END' />
      </column>
      <column caption='ProfitPerItem' datatype='real' name='[Calculation_888053554628960261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Quantity])' />
      </column>
      <column caption='QuantityPerOrder' datatype='real' name='[Calculation_888053554629718022]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Quantity])/COUNTD([Order ID])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region (Orders)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_AD72DA0D09284342AF2363B38CC9AF55]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region (Orders)]' derivation='None' name='[none:Region (Orders):nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_888053554626064388]' derivation='User' name='[usr:Calculation_888053554626064388:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='CategoryHierarchy'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
        <drill-path name='GeographicHierarchy'>
          <field>[Region (Orders)]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Vlad/AppData/Local/Temp/TableauTemp/#TableauTemp_1svjnhv1h0ioxi1agj8zh0s5f1q1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/13/2024 09:05:13 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Orders_EC5B8525E29345F5B5C547FEC2B68601' table='[Extract].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='People_AD72DA0D09284342AF2363B38CC9AF55' table='[Extract].[People_AD72DA0D09284342AF2363B38CC9AF55]' type='table' />
            <relation name='Orders_EC5B8525E29345F5B5C547FEC2B68601' table='[Extract].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' type='table' />
            <relation name='Returns_03FD1622327C40ACAF47DE4F3AF15FD3' table='[Extract].[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Category]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Category]' />
            <map key='[City]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[City]' />
            <map key='[Country]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Country]' />
            <map key='[Customer ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Customer Name]' />
            <map key='[Discount]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Discount]' />
            <map key='[Order Date]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Returns_03FD1622327C40ACAF47DE4F3AF15FD3].[Order ID]' />
            <map key='[Order ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Order ID]' />
            <map key='[Person]' value='[People_AD72DA0D09284342AF2363B38CC9AF55].[Person]' />
            <map key='[Postal Code]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Postal Code]' />
            <map key='[Product ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Product ID]' />
            <map key='[Product Name]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Product Name]' />
            <map key='[Profit]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Profit]' />
            <map key='[Quantity]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Quantity]' />
            <map key='[Region (Orders)]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Region]' />
            <map key='[Region]' value='[People_AD72DA0D09284342AF2363B38CC9AF55].[Region]' />
            <map key='[Returned]' value='[Returns_03FD1622327C40ACAF47DE4F3AF15FD3].[Returned]' />
            <map key='[Row ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Row ID]' />
            <map key='[Sales]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Sales]' />
            <map key='[Segment]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Segment]' />
            <map key='[Ship Date]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Ship Mode]' />
            <map key='[State]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[State]' />
            <map key='[Sub-Category]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Person]</local-name>
              <parent-name>[People_AD72DA0D09284342AF2363B38CC9AF55]</parent-name>
              <remote-alias>Person</remote-alias>
              <ordinal>0</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[People_AD72DA0D09284342AF2363B38CC9AF55]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (Orders)]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>23</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>24</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_888053554626064388:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Moderate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Critical&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region (Orders):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='SalesProfitSortParam' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
        <column caption='ReturnSortParam' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;ReturnRate&quot;'>
          <calculation class='tableau' formula='&quot;ReturnRate&quot;' />
        </column>
        <column caption='CategoryProfitSortParam' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_EC5B8525E29345F5B5C547FEC2B68601'>
            <properties context=''>
              <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders_EC5B8525E29345F5B5C547FEC2B68601' table='[Extract].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' type='table' />
            </properties>
          </object>
          <object caption='People' id='People_AD72DA0D09284342AF2363B38CC9AF55'>
            <properties context=''>
              <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='People_AD72DA0D09284342AF2363B38CC9AF55' table='[Extract].[People_AD72DA0D09284342AF2363B38CC9AF55]' type='table' />
            </properties>
          </object>
          <object caption='Returns' id='Returns_03FD1622327C40ACAF47DE4F3AF15FD3'>
            <properties context=''>
              <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns_03FD1622327C40ACAF47DE4F3AF15FD3' table='[Extract].[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Orders)]' />
            </expression>
            <first-end-point object-id='People_AD72DA0D09284342AF2363B38CC9AF55' />
            <second-end-point object-id='Orders_EC5B8525E29345F5B5C547FEC2B68601' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_EC5B8525E29345F5B5C547FEC2B68601' />
            <second-end-point object-id='Returns_03FD1622327C40ACAF47DE4F3AF15FD3' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='SalesProfitSortParam' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <members>
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Sales&quot;' />
          <member value='&quot;ProfitOverSales&quot;' />
        </members>
      </column>
      <column caption='ReturnSortParam' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;ReturnRate&quot;'>
        <calculation class='tableau' formula='&quot;ReturnRate&quot;' />
        <members>
          <member value='&quot;OrderCount&quot;' />
          <member value='&quot;ReturnRate&quot;' />
        </members>
      </column>
      <column caption='CategoryProfitSortParam' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <members>
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Profit Per Order&quot;' />
          <member value='&quot;Quantity Per Order&quot;' />
        </members>
      </column>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='task1_SalesProfitByRegion'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit and Sales Metrics by Region</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Here we can see which regions are the most profitable.
Turns out West is in a lead in terms of sales and Central performs the worst.

And if we drill down and look at each state metrics then we observe that West and East have outstanding states in terms of profit like California and New York respectively.
On the other hand, Center and South have states with large negative profit.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='People+ (Sample - Superstore)' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='SalesProfitSortParam' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1le79xl0tglxgt1gv11fg0fk1zc0'>
            <column caption='ProfitOverSales' datatype='real' name='[Calculation_646266549643685888]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column caption='SalesProfitSorter' datatype='real' name='[Calculation_646266549644771329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Sales&apos; THEN SUM([Sales])&#13;&#10;WHEN &apos;Profit&apos; THEN SUM([Profit])&#13;&#10;WHEN &apos;ProfitOverSales&apos; THEN [Calculation_646266549643685888]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (Orders)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region (Orders)]' derivation='None' name='[none:Region (Orders):nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_646266549643685888]' derivation='User' name='[usr:Calculation_646266549643685888:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_646266549644771329]' derivation='User' name='[usr:Calculation_646266549644771329:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' direction='DESC' measure-to-sort-by='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549644771329:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549644771329:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk]' value='59' />
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Sales:qk]' value='59' />
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549643685888:qk]' value='59' />
            <encoding attr='space' class='0' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549643685888:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.05' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549643685888:qk]' scope='cols' value='Profit Over Sales' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' value='70' />
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549643685888:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' value='124' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549643685888:qk]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Sort By'>
              <formatted-text>
                <run>Sort By</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549643685888:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk] / [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:State:nk])</rows>
        <cols>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk] + ([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Sales:qk] + [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549643685888:qk]))</cols>
      </table>
      <simple-id uuid='{3CD36AF3-6334-4E0C-8BE7-E3A834DFAC0E}' />
    </worksheet>
    <worksheet name='task2_ReturnsByCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Returns by Sub-Category</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>We see that Machines sub-category has the highest return rate. Although, If we take a look at Profit Loss Per Item then Copiers are lead by a large margine. So we should really focus on this return category.

And some categories (e.g. Tabels) even have negative profit value so these kind of returns may not be so important afterall.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='People+ (Sample - Superstore)' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='ReturnSortParam' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;ReturnRate&quot;'>
              <calculation class='tableau' formula='&quot;ReturnRate&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1le79xl0tglxgt1gv11fg0fk1zc0'>
            <column caption='ReturnSorter' datatype='real' name='[Calculation_646266549647618050]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;OrderCount&apos; THEN COUNTD([Order ID (Returns)])&#13;&#10;WHEN &apos;ReturnRate&apos; THEN [Calculation_888053554623225856]&#13;&#10;END' />
            </column>
            <column caption='ReturnRate' datatype='real' name='[Calculation_888053554623225856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Order ID (Returns)]) / COUNTD([Order ID])' />
            </column>
            <column caption='ProfitPerItem' datatype='real' name='[Calculation_888053554628960261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Quantity])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID (Returns)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (Orders)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID (Returns)]' derivation='CountD' name='[ctd:Order ID (Returns):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (Orders)]' derivation='None' name='[none:Region (Orders):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_646266549647618050]' derivation='User' name='[usr:Calculation_646266549647618050:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_888053554623225856]' derivation='User' name='[usr:Calculation_888053554623225856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_888053554628960261]' derivation='User' name='[usr:Calculation_888053554628960261:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]'>
            <groupfilter function='level-members' level='[none:Region (Orders):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' direction='DESC' using='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549647618050:qk]' />
          <slices>
            <column>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]' scope='cols' value='Return Rate' />
            <format attr='title' class='0' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[ctd:Order ID (Returns):qk]' scope='cols' value='Returned Order Count' />
            <format attr='title' class='0' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]' scope='cols' value='Profit Loss Per Item' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]' value='p0.00%' />
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' value='27' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' value='144' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[ctd:Order ID (Returns):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk] / [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk])</rows>
        <cols>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk] + ([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[ctd:Order ID (Returns):qk] + [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]))</cols>
      </table>
      <simple-id uuid='{AE7E564C-17B9-4074-8F53-65F7CBA7A1E9}' />
    </worksheet>
    <worksheet name='task3_ProfitPerCategory'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit by Category&#10;</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Copiers are by far the most profitable category with Accessories coming second with almost 20 times lower profit values. So our main priority should be Copiers.

Some sub-categories have quite high negative profit like Tabels and Bookcases and primerally belong to Furniture category. So we slound consider continue sell them only if they boost sales of other profitable goods.

</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='People+ (Sample - Superstore)' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='CategoryProfitSortParam' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1le79xl0tglxgt1gv11fg0fk1zc0'>
            <column caption='CategoryProfitSorter' datatype='real' name='[Calculation_646266549665419267]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 3]&#13;&#10;WHEN &apos;Profit&apos; THEN SUM([Profit])&#13;&#10;WHEN &apos;Profit Per Item&apos; THEN [Calculation_888053554628960261]&#13;&#10;WHEN  &apos;Quantity Per Order&apos; THEN [Calculation_888053554629718022]&#13;&#10;END' />
            </column>
            <column caption='ProfitPerItem' datatype='real' name='[Calculation_888053554628960261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Quantity])' />
            </column>
            <column caption='QuantityPerOrder' datatype='real' name='[Calculation_888053554629718022]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Quantity])/COUNTD([Order ID])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (Orders)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (Orders)]' derivation='None' name='[none:Region (Orders):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_646266549665419267]' derivation='User' name='[usr:Calculation_646266549665419267:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_888053554628960261]' derivation='User' name='[usr:Calculation_888053554628960261:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_888053554629718022]' derivation='User' name='[usr:Calculation_888053554629718022:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <natural-sort column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]'>
            <groupfilter function='level-members' level='[none:Region (Orders):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' direction='DESC' using='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_646266549665419267:qk]' />
          <slices>
            <column>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk]' value='63' />
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]' value='63' />
            <format attr='title' class='0' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]' scope='cols' value='Profit Per Item' />
            <format attr='title' class='0' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554629718022:qk]' scope='cols' value='Quantity Per Order' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' value='26' />
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554629718022:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' value='136' />
            <format attr='width' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554629718022:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 3]' value='Sort By'>
              <formatted-text>
                <run>Sort By</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='346' />
                <format attr='maxwidth' value='346' />
                <format attr='minheight' value='442' />
                <format attr='maxheight' value='442' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554629718022:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk] / [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk])</rows>
        <cols>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk] + ([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk] + [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554629718022:qk]))</cols>
      </table>
      <simple-id uuid='{5CB17741-C11C-4627-BD76-3B2C58CC54EE}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='task1_SalesProfitByRegion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' type='color' />
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='152'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Order ID:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB3A35BC-C70F-4636-B5B0-3D8AFC72C49C}' />
    </window>
    <window class='worksheet' name='task2_ReturnsByCategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' type='color' />
            <card mode='radiolist' param='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;West&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:City:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Country:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{246D98E7-17A4-45A4-B2F4-7A598B1538D2}' />
    </window>
    <window class='worksheet' maximized='true' name='task3_ProfitPerCategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' type='color' />
            <card mode='radiolist' param='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]' type='filter' values='cascading' />
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='107'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Calculation_888053554623991810:qk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Region (Orders):nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E53F587-40C0-4A00-89E1-DDCBCFD4B773}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='task1_SalesProfitByRegion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='task2_ReturnsByCategory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='task3_ProfitPerCategory' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
