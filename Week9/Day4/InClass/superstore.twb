<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='People+ (Sample - Superstore)' inline='true' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Vlad/developers_institute/practice/Week9/Day4/ExerciseXP/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (Orders)]' value='[Orders].[Region]' />
          <map key='[Region]' value='[People].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Orders)]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ReturnRate' datatype='real' name='[Calculation_888053554623225856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Order ID (Returns)]) / COUNTD([Order ID])' />
      </column>
      <column caption='CriticalReturnRate' datatype='string' name='[Calculation_888053554626064388]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_888053554623225856] &gt;= 0.03 THEN &apos;Critical&apos;&#13;&#10;ELSE &apos;Moderate&apos;&#13;&#10;END' />
      </column>
      <column caption='ProfitPerItem' datatype='real' name='[Calculation_888053554628960261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Quantity])' />
      </column>
      <column caption='QuantityPerOrder' datatype='real' name='[Calculation_888053554629718022]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Quantity])/COUNTD([Order ID])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_AD72DA0D09284342AF2363B38CC9AF55]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_888053554626064388]' derivation='User' name='[usr:Calculation_888053554626064388:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Vlad/AppData/Local/Temp/TableauTemp/#TableauTemp_1svjnhv1h0ioxi1agj8zh0s5f1q1.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/13/2024 09:05:13 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Orders_EC5B8525E29345F5B5C547FEC2B68601' table='[Extract].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='People_AD72DA0D09284342AF2363B38CC9AF55' table='[Extract].[People_AD72DA0D09284342AF2363B38CC9AF55]' type='table' />
            <relation name='Orders_EC5B8525E29345F5B5C547FEC2B68601' table='[Extract].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' type='table' />
            <relation name='Returns_03FD1622327C40ACAF47DE4F3AF15FD3' table='[Extract].[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[Category]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Category]' />
            <map key='[City]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[City]' />
            <map key='[Country]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Country]' />
            <map key='[Customer ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Customer ID]' />
            <map key='[Customer Name]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Customer Name]' />
            <map key='[Discount]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Discount]' />
            <map key='[Order Date]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Returns_03FD1622327C40ACAF47DE4F3AF15FD3].[Order ID]' />
            <map key='[Order ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Order ID]' />
            <map key='[Person]' value='[People_AD72DA0D09284342AF2363B38CC9AF55].[Person]' />
            <map key='[Postal Code]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Postal Code]' />
            <map key='[Product ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Product ID]' />
            <map key='[Product Name]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Product Name]' />
            <map key='[Profit]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Profit]' />
            <map key='[Quantity]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Quantity]' />
            <map key='[Region (Orders)]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Region]' />
            <map key='[Region]' value='[People_AD72DA0D09284342AF2363B38CC9AF55].[Region]' />
            <map key='[Returned]' value='[Returns_03FD1622327C40ACAF47DE4F3AF15FD3].[Returned]' />
            <map key='[Row ID]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Row ID]' />
            <map key='[Sales]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Sales]' />
            <map key='[Segment]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Segment]' />
            <map key='[Ship Date]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Ship Date]' />
            <map key='[Ship Mode]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Ship Mode]' />
            <map key='[State]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[State]' />
            <map key='[Sub-Category]' value='[Orders_EC5B8525E29345F5B5C547FEC2B68601].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Person</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Person]</local-name>
              <parent-name>[People_AD72DA0D09284342AF2363B38CC9AF55]</parent-name>
              <remote-alias>Person</remote-alias>
              <ordinal>0</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[People_AD72DA0D09284342AF2363B38CC9AF55]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>People</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_AD72DA0D09284342AF2363B38CC9AF55]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region (Orders)]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_EC5B8525E29345F5B5C547FEC2B68601]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>23</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>24</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>296</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_888053554626064388:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Moderate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Critical&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_EC5B8525E29345F5B5C547FEC2B68601'>
            <properties context=''>
              <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Orders_EC5B8525E29345F5B5C547FEC2B68601' table='[Extract].[Orders_EC5B8525E29345F5B5C547FEC2B68601]' type='table' />
            </properties>
          </object>
          <object caption='People' id='People_AD72DA0D09284342AF2363B38CC9AF55'>
            <properties context=''>
              <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='People_AD72DA0D09284342AF2363B38CC9AF55' table='[Extract].[People_AD72DA0D09284342AF2363B38CC9AF55]' type='table' />
            </properties>
          </object>
          <object caption='Returns' id='Returns_03FD1622327C40ACAF47DE4F3AF15FD3'>
            <properties context=''>
              <relation connection='excel-direct.1jjk5rs18d1aer1b3e56v1ck2fnx' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Returns_03FD1622327C40ACAF47DE4F3AF15FD3' table='[Extract].[Returns_03FD1622327C40ACAF47DE4F3AF15FD3]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (Orders)]' />
            </expression>
            <first-end-point object-id='People_AD72DA0D09284342AF2363B38CC9AF55' />
            <second-end-point object-id='Orders_EC5B8525E29345F5B5C547FEC2B68601' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_EC5B8525E29345F5B5C547FEC2B68601' />
            <second-end-point object-id='Returns_03FD1622327C40ACAF47DE4F3AF15FD3' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='People+ (Sample - Superstore)' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' />
          </datasources>
          <datasource-dependencies datasource='federated.1le79xl0tglxgt1gv11fg0fk1zc0'>
            <column caption='ReturnRate' datatype='real' name='[Calculation_888053554623225856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Order ID (Returns)]) / COUNTD([Order ID])' />
            </column>
            <column caption='CriticalReturnRate' datatype='string' name='[Calculation_888053554626064388]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_888053554623225856] &gt;= 0.03 THEN &apos;Critical&apos;&#13;&#10;ELSE &apos;Moderate&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Order ID (Returns)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column-instance column='[Order ID (Returns)]' derivation='CountD' name='[ctd:Order ID (Returns):qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_888053554623225856]' derivation='User' name='[usr:Calculation_888053554623225856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_888053554626064388]' derivation='User' name='[usr:Calculation_888053554626064388:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:City:nk]'>
            <groupfilter expression='COUNTD([Order ID (Returns)]) &gt; 2' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[ctd:Order ID (Returns):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[ctd:Order ID (Returns):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554626064388:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:City:nk]</rows>
        <cols>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk] + [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[ctd:Order ID (Returns):qk])</cols>
      </table>
      <simple-id uuid='{AE7E564C-17B9-4074-8F53-65F7CBA7A1E9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='People+ (Sample - Superstore)' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' />
          </datasources>
          <datasource-dependencies datasource='federated.1le79xl0tglxgt1gv11fg0fk1zc0'>
            <column caption='ProfitPerItem' datatype='real' name='[Calculation_888053554628960261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Quantity])' />
            </column>
            <column caption='QuantityPerOrder' datatype='real' name='[Calculation_888053554629718022]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Quantity])/COUNTD([Order ID])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_888053554628960261]' derivation='User' name='[usr:Calculation_888053554628960261:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_888053554629718022]' derivation='User' name='[usr:Calculation_888053554629718022:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk]' value='63' />
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]' value='63' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]' value='26' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554629718022:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]</rows>
        <cols>([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[sum:Profit:qk] + ([federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554628960261:qk] + [federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554629718022:qk]))</cols>
      </table>
      <simple-id uuid='{5CB17741-C11C-4627-BD76-3B2C58CC54EE}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='People+ (Sample - Superstore)' name='federated.1le79xl0tglxgt1gv11fg0fk1zc0' />
          </datasources>
          <datasource-dependencies datasource='federated.1le79xl0tglxgt1gv11fg0fk1zc0'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Day-Trunc' name='[tdy:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[cnt:Order ID:qk]</rows>
        <cols>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[tdy:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{3CD36AF3-6334-4E0C-8BE7-E3A834DFAC0E}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F2B8D7BC-A949-46E1-978D-182BC3DBA6F5}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554626064388:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:City:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Country:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554623225856:qk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[usr:Calculation_888053554626064388:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{246D98E7-17A4-45A4-B2F4-7A598B1538D2}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Calculation_888053554623991810:qk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Category:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E53F587-40C0-4A00-89E1-DDCBCFD4B773}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Order ID:nk]</field>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB3A35BC-C70F-4636-B5B0-3D8AFC72C49C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1le79xl0tglxgt1gv11fg0fk1zc0].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12EC1DF2-53FC-4D53-824C-ECF848875976}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      xNDXOvcKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
